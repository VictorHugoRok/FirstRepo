/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;


import Controlador.ControllerUsuarios;
import Exception.excepcion;
import Modelo.ConexionH2;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cesar
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public ControllerUsuarios objUsuarios;
    DefaultTableModel Modelo;
    public Interfaz() {
        initComponents();
         String[] Titulos = {"Id","Nombre","Tipo","NoOrden"};
        Modelo = new DefaultTableModel(null, Titulos);
        tblDatos.setModel(Modelo);
        crearTabla();
        CargarTabla();
        actualizarTabla();
    }
        private void crearTabla() {
        try (Connection conn = ConexionH2.getConnection()) {
            ConexionH2.crearTabla(conn);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        
            void CargarTabla(){
       while(Modelo.getRowCount()>0){
           Modelo.removeRow(0);
       }
       try{
           ResultSet rs = ControllerUsuarios.CargarUsuarios();
           while(rs.next()){
               Object[] oValores = {rs.getString("Id"),rs.getString("Nombre"),rs.getString("Tipo"),rs.getString("NoOrden")};
               Modelo.addRow(oValores);
           }
       }catch(Exception e){
           
       }
    }
            
        void GuardarDatos(){
        String Nombre = txtNombre.getText();
        String Encargado = txtTipo.getText();
        int Orden = Integer.parseInt(txtNoOrden.getText());
        objUsuarios = new ControllerUsuarios(Nombre, Encargado, Orden);
        boolean respuesta = objUsuarios.RegistrarUsuario();
        if(respuesta == true){
            JOptionPane.showMessageDialog(null,"Error al ingresar datos");
        }
    }
        
        private void limpiar(){
        txtId.setText("");
        txtNombre.setText("");
        txtTipo.setText("");
        txtNoOrden.setText("");
    }  
    
          private void actualizarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblDatos.getModel();
        modeloTabla.setRowCount(0);
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        int[] anchos = {10,100,200,10};
        for(int i = 0; i < tblDatos.getColumnCount(); i++){
            tblDatos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
        try{
            Connection con = ConexionH2.getConnection();
            ps = con.prepareStatement("SELECT id, nombre, tipo, NoOrden FROM TablaBase");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();
        
        while(rs.next()){
            Object[] fila = new Object[columnas];
            for(int indice=0; indice<columnas; indice++){
                fila[indice]=rs.getObject(indice+1);
            }
            modeloTabla.addRow(fila);
        }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }
          private void buscarUsuarios() {
     String nombreUsuario = JOptionPane.showInputDialog("Ingrese el nombre de usuario a buscar:");
    if (nombreUsuario != null && !nombreUsuario.isEmpty()) {
        try {
            ResultSet rs = ControllerUsuarios.buscarUsuariosPorNombre(nombreUsuario);
            if (!rs.next()) {
                throw new  excepcion("Usuario no encontrado");
            }

            Modelo.setRowCount(0); 

            do {
                Object[] fila = {
                    rs.getInt("id"),
                    rs.getString("nombre"),
                    rs.getString("tipo"),
                    rs.getInt("NoOrden")
                };
                Modelo.addRow(fila);
            } while (rs.next());
        } catch (excepcion e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    } else {
        JOptionPane.showMessageDialog(null, "Ingrese un nombre de usuario vÃ¡lido.");
    }
}
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtTipo = new javax.swing.JTextField();
        txtNoOrden = new javax.swing.JTextField();
        OrdenNombre = new javax.swing.JButton();
        OrdenNum = new javax.swing.JButton();
        BotonBuscar = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        txtId.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatos);

        jLabel1.setText("Nombre");

        jLabel2.setText("Tipo");

        jLabel3.setText("Numero de Ordenes");

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Borrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        txtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoActionPerformed(evt);
            }
        });

        txtNoOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoOrdenActionPerformed(evt);
            }
        });

        OrdenNombre.setText("Ordenar x Nombre");
        OrdenNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenNombreActionPerformed(evt);
            }
        });

        OrdenNum.setText("Ordenar x Numero");
        OrdenNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenNumActionPerformed(evt);
            }
        });

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(205, 205, 205)
                                .addComponent(OrdenNombre)
                                .addGap(61, 61, 61)
                                .addComponent(OrdenNum, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1)
                                        .addComponent(jButton2))
                                    .addComponent(jButton3))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNoOrden, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNombre)
                                            .addComponent(txtTipo, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BotonBuscar)
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(BotonBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jButton2))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButton3)
                    .addComponent(txtNoOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(OrdenNombre)
                    .addComponent(OrdenNum))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 int id =Integer.parseInt(txtId.getText());
        String Nombre = txtNombre.getText();
        String Encargado = txtTipo.getText();
        String Orden = txtNoOrden.getText();
        try{
            Connection con = ConexionH2.getConnection();
            PreparedStatement ps = con.prepareStatement("UPDATE TablaBase SET nombre=?, tipo=?, NoOrden=?");
            ps.setString(1, Nombre);
            ps.setString(2, Encargado);
            ps.setString(3, Orden);
            ps.setInt(4, id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Registro modificado");
            limpiar();
            actualizarTabla();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.toString());
        }              // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GuardarDatos();
        limpiar();
        actualizarTabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDatosMouseClicked
     try{
            int fila = tblDatos.getSelectedRow();
            int id = Integer.parseInt(tblDatos.getValueAt(fila, 0).toString());
            PreparedStatement ps;
            ResultSet rs;
            
            Connection con = ConexionH2.getConnection();
            ps = con.prepareStatement("SELECT nombre, tipo, NoOrden FROM TablaBase WHERE id=?");
            ps.setInt(1,id);
            rs = ps.executeQuery();
            
            while(rs.next()){
                txtId.setText(String.valueOf(id));
                txtNombre.setText(rs.getString("nombre"));
                txtTipo.setText(rs.getString("tipo"));
                txtNoOrden.setText(rs.getString("NoOrden"));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.toString());
        }        // TODO add your handling code here:
    }//GEN-LAST:event_tblDatosMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int id =Integer.parseInt(txtId.getText());
        try{
            Connection con = ConexionH2.getConnection();
            PreparedStatement ps = con.prepareStatement("DELETE FROM TablaBase WHERE id=?");
            ps.setInt(1, id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null,"Registro eliminado");
            limpiar();
            actualizarTabla();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.toString());
        }     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
limpiar();   
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoActionPerformed

    private void txtNoOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoOrdenActionPerformed

    private void OrdenNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenNombreActionPerformed
    try (Connection conn = ConexionH2.getConnection()) {
    String sql = "SELECT * FROM TablaBase ORDER BY nombre ASC";
    try (PreparedStatement stmt = conn.prepareStatement(sql)) {
        try (ResultSet rs = stmt.executeQuery()) {
            DefaultTableModel model = (DefaultTableModel) tblDatos.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                int id = rs.getInt("id");
                String nombre = rs.getString("nombre");
                String encargado = rs.getString("tipo");
                int orden = rs.getInt("NoOrden");
                Object[] fila = {id, nombre, encargado, orden};
                model.addRow(fila);
            }
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al ordenar por nombre: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}        // TODO add your handling code here:
    }//GEN-LAST:event_OrdenNombreActionPerformed

    private void OrdenNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenNumActionPerformed
       try (Connection conn = ConexionH2.getConnection()) {
    String sql = "SELECT * FROM TablaBase ORDER BY NoOrden ASC";
    try (PreparedStatement stmt = conn.prepareStatement(sql)) {
        try (ResultSet rs = stmt.executeQuery()) {
            DefaultTableModel model = (DefaultTableModel) tblDatos.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                int id = rs.getInt("id");
                String nombre = rs.getString("nombre");
                String encargado = rs.getString("tipo");
                String orden = rs.getString("NoOrden"); // Cambiado a String
                Object[] fila = {id, nombre, encargado, orden};
                model.addRow(fila);
            }
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al ordenar por numeros de orden: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}        // TODO add your handling code here:
    }//GEN-LAST:event_OrdenNumActionPerformed

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
       try {
    buscarUsuarios();
} catch (Exception ex) {
    JOptionPane.showMessageDialog(null, ex.getMessage());
} // TODO add your handling code here:
    }//GEN-LAST:event_BotonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JButton OrdenNombre;
    private javax.swing.JButton OrdenNum;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblDatos;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNoOrden;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
